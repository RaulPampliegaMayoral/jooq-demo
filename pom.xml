<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.anjana.raulpampliega</groupId>
	<artifactId>jooq-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>jooq-demo</name>
	<description>Jooq Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<anjana.version>4.3.0</anjana.version>
		<jpa-streamer-version>1.0.2</jpa-streamer-version>
		<jooq.version>3.14.11</jooq.version>
		<blaze-persistence.version>1.6.6</blaze-persistence.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta-extensions</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.speedment.jpastreamer</groupId>
			<artifactId>jpastreamer-core</artifactId>
			<version>${jpa-streamer-version}</version>
		</dependency>
		<dependency>
			<groupId>com.speedment.jpastreamer.integration.spring</groupId>
			<artifactId>spring-boot-jpastreamer-autoconfigure</artifactId>
			<version>${jpa-streamer-version}</version>
		</dependency>
		<dependency>
			<artifactId>core-library</artifactId>
			<groupId>com.anjana.core</groupId>
			<version>${anjana.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jinq</groupId>
			<artifactId>jinq-jpa</artifactId>
			<version>1.8.34</version>
		</dependency>
		<!-- Blaze Persistence -->
		<dependency>
			<groupId>com.blazebit</groupId>
			<artifactId>blaze-persistence-core-api</artifactId>
			<version>${blaze-persistence.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.blazebit</groupId>
			<artifactId>blaze-persistence-core-impl</artifactId>
			<version>${blaze-persistence.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.blazebit</groupId>
			<artifactId>blaze-persistence-integration-hibernate-5.4</artifactId>
			<version>${blaze-persistence.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.17.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- JOOQ -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>
						<id>generate-jooq</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.2.23</version>
					</dependency>
				</dependencies>
				<configuration>
					<!--
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://rdbservice:5432/anjana?currentSchema=anjana</url>
						<user>anjana</user>
						<password>anjana</password>
					</jdbc>
					-->
					<generator>
						<!--
						<database>
						<name>org.jooq.meta.postgres.PostgresDatabase</name>
						<includes>.*</includes>
						<excludes></excludes>
						<schemata>
							<schema>
								<inputSchema>anjana</inputSchema>
								<outputSchemaToDefault>true</outputSchemaToDefault>
							</schema>
						</schemata>
					</database>
					-->
						<database>
							<name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
							<properties>
								<property>
									<key>packages</key>
									<value>com.anjana.raulpampliega.jooqdemo.model</value>
								</property>
								<property>
									<key>scripts</key>
									<value>src/main/resources/schema.sql</value>
								</property>
								<property>
									<key>sort</key>
									<value>semantic</value>
								</property>
								<property>
									<key>unqualifiedSchema</key>
									<value>none</value>
								</property>
							</properties>
						</database>
						<target>
							<packageName>com.anjana.raulpampliega.jooq.model</packageName>
							<directory>${project.build.directory}/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
			<!-- JPAStreamer -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>
									${project.build.directory}/generated-sources/jpastreamer
								</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
